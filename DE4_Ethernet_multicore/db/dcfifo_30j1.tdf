--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Stratix IV" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=32768 LPM_SHOWAHEAD="OFF" LPM_WIDTH=9 LPM_WIDTH_R=72 LPM_WIDTHU=15 LPM_WIDTHU_R=12 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=4 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="OFF" WRSYNC_DELAYPIPE=4 aclr data q rdclk rdempty rdreq wrclk wrfull wrreq wrusedw CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Stratix IV" LOW_POWER_MODE="AUTO" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 10.1SP1 cbx_a_gray2bin 2011:01:19:21:13:40:SJ cbx_a_graycounter 2011:01:19:21:13:40:SJ cbx_altdpram 2011:01:19:21:13:40:SJ cbx_altsyncram 2011:01:19:21:13:40:SJ cbx_cycloneii 2011:01:19:21:13:40:SJ cbx_dcfifo 2011:01:19:21:13:40:SJ cbx_fifo_common 2011:01:19:21:13:40:SJ cbx_lpm_add_sub 2011:01:19:21:13:40:SJ cbx_lpm_compare 2011:01:19:21:13:40:SJ cbx_lpm_counter 2011:01:19:21:13:40:SJ cbx_lpm_decode 2011:01:19:21:13:40:SJ cbx_lpm_mux 2011:01:19:21:13:40:SJ cbx_mgl 2011:01:19:21:15:40:SJ cbx_scfifo 2011:01:19:21:13:40:SJ cbx_stratix 2011:01:19:21:13:40:SJ cbx_stratixii 2011:01:19:21:13:40:SJ cbx_stratixiii 2011:01:19:21:13:40:SJ cbx_stratixv 2011:01:19:21:13:40:SJ cbx_util_mgl 2011:01:19:21:13:40:SJ  VERSION_END


-- Copyright (C) 1991-2011 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_gray2bin_6fb (gray[12..0])
RETURNS ( bin[12..0]);
FUNCTION a_graycounter_547 (aclr, clock, cnt_en)
RETURNS ( q[12..0]);
FUNCTION a_graycounter_0ic (aclr, clock, cnt_en)
RETURNS ( q[12..0]);
FUNCTION altsyncram_6i31 (aclr1, address_a[14..0], address_b[11..0], addressstall_b, clock0, clock1, clocken1, data_a[8..0], wren_a)
RETURNS ( q_b[71..0]);
FUNCTION alt_synch_pipe_vld (clock, clrn, d[12..0])
RETURNS ( q[12..0]);
FUNCTION dffpipe_0f9 (clock, clrn, d[12..0])
RETURNS ( q[12..0]);
FUNCTION dffpipe_1f9 (clock, clrn, d[15..0])
RETURNS ( q[15..0]);
FUNCTION alt_synch_pipe_0md (clock, clrn, d[12..0])
RETURNS ( q[12..0]);
FUNCTION cmpr_n46 (dataa[12..0], datab[12..0])
RETURNS ( aeb);
FUNCTION cntr_41e (aset, clock, cnt_en)
RETURNS ( cout, q[2..0]);

--synthesis_resources = lut 100 ram_bits (AUTO) 294912 reg 166 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 2;{-to wrptr_g} suppress_da_rule_internal=S102;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe19|dffe20a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_2f9:dffpipe19|dffe20a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe14|dffe15a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_ve9:dffpipe14|dffe15a* """;

SUBDESIGN dcfifo_30j1
( 
	aclr	:	input;
	data[8..0]	:	input;
	q[71..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrfull	:	output;
	wrreq	:	input;
	wrusedw[14..0]	:	output;
) 
VARIABLE 
	wrptr_g_gray2bin : a_gray2bin_6fb;
	ws_dgrp_gray2bin : a_gray2bin_6fb;
	rdptr_g1p : a_graycounter_547;
	wrptr_g1p : a_graycounter_0ic;
	fifo_ram : altsyncram_6i31;
	delayed_wrptr_g[12..0] : dffe;
	rdptr_g[12..0] : dffe;
	wrptr_g[15..0] : dffe;
	rs_dgwp : alt_synch_pipe_vld;
	ws_brp : dffpipe_0f9;
	ws_bwp : dffpipe_1f9;
	ws_dgrp : alt_synch_pipe_0md;
	wrusedw_sub_dataa[15..0]	:	WIRE;
	wrusedw_sub_datab[15..0]	:	WIRE;
	wrusedw_sub_result[15..0]	:	WIRE;
	rdempty_eq_comp : cmpr_n46;
	wrfull_eq_comp : cmpr_n46;
	cntr_b : cntr_41e;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[14..0]	: WIRE;
	ram_address_b[11..0]	: WIRE;
	temp_wrusedw_sub_data[15..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[12..0]	: WIRE;
	ws_bwp_reg_data[15..0]	: WIRE;

BEGIN 
	wrptr_g_gray2bin.gray[12..0] = wrptr_g[15..3].q;
	ws_dgrp_gray2bin.gray[] = ws_dgrp.q[];
	rdptr_g1p.aclr = aclr;
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = valid_rdreq;
	wrptr_g1p.aclr = aclr;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = (valid_wrreq & cntr_b.cout);
	fifo_ram.aclr1 = aclr;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! valid_rdreq);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.clocken1 = valid_rdreq;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = (! aclr);
	delayed_wrptr_g[].d = wrptr_g[15..3].q;
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrptr_g[].clk = wrclk;
	wrptr_g[].clrn = (! aclr);
	wrptr_g[].d = ( wrptr_g1p.q[], cntr_b.q[]);
	wrptr_g[].ena = valid_wrreq;
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_brp.clock = wrclk;
	ws_brp.clrn = (! aclr);
	ws_brp.d[] = ws_dgrp_gray2bin.bin[];
	ws_bwp.clock = wrclk;
	ws_bwp.clrn = (! aclr);
	ws_bwp.d[] = ws_bwp_reg_data[];
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = (! aclr);
	ws_dgrp.d[] = rdptr_g[].q;
	wrusedw_sub_result[] = wrusedw_sub_dataa[] - wrusedw_sub_datab[];
	wrusedw_sub_dataa[] = ws_bwp.q[];
	wrusedw_sub_datab[] = temp_wrusedw_sub_data[];
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	cntr_b.aset = aclr;
	cntr_b.clock = wrclk;
	cntr_b.cnt_en = valid_wrreq;
	int_rdempty = rdempty_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_g[15..15].q $ wrptr_g[14..14].q), wrptr_g[13..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[12..12] $ rdptr_g1p.q[11..11]), rdptr_g1p.q[10..0]);
	rdempty = int_rdempty;
	temp_wrusedw_sub_data[] = ( ws_brp.q[], B"000");
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrfull = int_wrfull;
	wrptr_gs[] = ( (! wrptr_g[15..15].q), (! wrptr_g[14..14].q), wrptr_g[13..3].q);
	wrusedw[] = ( wrusedw_sub_result[14..0]);
	ws_bwp_reg_data[] = ( wrptr_g_gray2bin.bin[], wrptr_g[2..0].q);
END;
--VALID FILE
